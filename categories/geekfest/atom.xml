<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Geekfest | Блог Найдёнова Анатолия]]></title>
  <link href="http://a-naydenov.github.com/categories/geekfest/atom.xml" rel="self"/>
  <link href="http://a-naydenov.github.com/"/>
  <updated>2016-09-02T20:36:49+08:00</updated>
  <id>http://a-naydenov.github.com/</id>
  <author>
    <name><![CDATA[Найдёнов Анатолий]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[night geekfest'14]]></title>
    <link href="http://a-naydenov.github.com/night-geekfest14/"/>
    <updated>2014-08-02T21:25:00+09:00</updated>
    <id>http://a-naydenov.github.com/night-geekfest14</id>
    <content type="html"><![CDATA[<p>Считал, что кто-то конечно же напишет night geekfest, но чёт никто не. Так что вот, мои впечатления.</p>

<p>Подготовка. Изначально и участвовать не собирался, считая, что подбирать разноплановую команду в сезон отпусков, определять роли, план это все долго, но потом в пробке вспомнил слова Голодного "давай собирай команду" и все же на выходной вечер за неделю до найта забил в таск-трекер обдумать это дело. И таки организовались за один вечер!</p>

<!-- more -->


<p>Идею долго придумывать не пришлось, взял последнюю пришедшую в голову. То, чего мне не хватало когда я искал себе квартиру. Она как раз вписывалась в мои представления о том, что идея проекта на хакатон должен быть с короткой бизнес-логикой, минимум UI и быстро прототипируемой функциональностью. Юзкейс определили в три пункта и решили зафигачить на javascript (на котором ранее не писали), без высокоуровневых фреймворков делать одностраничный сервис. Поняв, что сможем успеть, решили участвовать.</p>

<p>Теперь о самом мероприятии.
Пиво неотъемлемый атрибут гикнайта и третий по счёту проводился в пивном кафе-ресторане «Квакинн», сумевший вместить всех пришедших, коих было под сотню.
Но уже на вступительном слове стало ощутимо, что "чистые носки, тапочки и шорты по желанию" это не для пляжного афтепати и что ночь будет не только жаркой, но ещё и душной.
Дп и к тому же, нехватало свободного пространства на презентации проектов. Ну и кухня, конечно же, закрывшись к полпервому обеспечила посетителей слате и сабвэю. Поэтому, ночные заведения которые больше и где есть подиум (например Амстел или Ханс) считаю более подходящими для проведения хакатонов. А, ну музыка была ок-да, в том плане что тихая.</p>

<iframe src="http://a-naydenov.github.com//instagram.com/p/q8_PIuENLv/embed/" width="612" height="710" frameborder="0" scrolling="no" float="left" allowtransparency="true" position=></iframe>


<p>Интернет уже традиционно предоставлен «ДСИ» и... поругать не могу, стабильный канал, хоть и были дважды моменты, когда коммит пушился попытки с пятой, что считаю несущественным.</p>

<p>Так же порадовала дружеская атмосфера, в общении не ощущался соревновательный накал. Отметил так же появление новых лиц, с некоторыми из которых удалось пообщаться. Открыл для себя комадну компании К-12 из Ангарска, делавшие приложение алертов с API на Golang и QT на юзера. Видно что знакомы с прекрасным. А сначала сказали, что делают игры для соцсетей.</p>

<p>"Главное — успеть за одну ночь" не вышло у большого числа команд и на представлении было три проекта для мобилок, одна игра и робототехники из техникума с рассказом, что должно было получиться если бы у них не сели батарейки (хотя в Слате были), а все другие-остальные сделали под веб. Но сами идеи были разнообразные, от неожиданно крутейших как-то <a href="https://www.facebook.com/events/254892254703549/permalink/266698136856294/">Enjoystick</a> и до абсолютных сложно описуемого чемпиона из рубрики "упрлся тк упрлся" от команды Волына. Примерно половина из увиденных проектов были социально-значимые' и половина из них как и наш базировались на картографических API. Видимо с претензией на приз от правительства области и администрации города. Однако, победителя на этот спецприз выбрали как-то будто по принципу "что подходило и успел увидеть".</p>

<blockquote class="twitter-tweet" lang="ru" align="right" float="right" margin="7px 7px 7px 7px"><p><a href="https://twitter.com/hashtag/geekfestru?src=hash">#geekfestru</a> Пруфпик с рейтингом Администраций области в 100% от <a href="http://t.co/nVmazfkTRZ">http://t.co/nVmazfkTRZ</a> <a href="http://t.co/uglVySrvly">pic.twitter.com/uglVySrvly</a></p>&mdash; Anatoly Naydenov (@a_naydenov) <a href="https://twitter.com/a_naydenov/statuses/493158481902698496">26 июля 2014</a></blockquote>


<p>К вопросу об организации. Здесь пожалуй лишь одно — нужны предоставить равные условия для презентации. Некоторым дали больше времени и они прокликали весь проект, когда другие не успели раскрыть сути (не успел до слайда о стеке технологий даже дотыкать:)). Конечно слово коррупция звучало и не раз, хоть чаще от получающего призы чем от публики.</p>

<p>На мой взгляд в представлении проектов не хватало общей структурности, конечно забавное единство показали участники запуская утром слайды, когда как в анонсе было "продемонстрировать его всем остальным — без всяких презентаций, на живую". Но результаты голосования будут объективней если представляющие будут придерживаться единой структуры. К примеру чтобы были ответы на такие вопросы как: что использовали, что планировали и успели/не успели и как будут доделывать. И с планируемой датой релиза <img alt="angry" src="/images/emoji/unicode/1f620.png" class="emoji" />, а то мотивационный пинок к участию это реализация вечно откладываемых задумок, а на утро большинство проектов все равно ушли "в стол".</p>

<p>Спонсорские призы.
Помимо традиционного для гикфеста пакета с блокнотом и ручкой, коих девать уже некуда и прочим спонсорским стаффом, в этот раз были действительно полезные вещи. Как-то персональные и командные карточки от хостера flops.ru — считаю очень уместным подарком от самого удачного хостера в россии. Вот бы ещё скидочную карточку от регистратора доменов <img alt="wink" src="/images/emoji/unicode/1f609.png" class="emoji" />, чтобы больше проектов с гикнайта увидели бы свет.
По призам все было скудно и они скучнейшие, кроме опять же карт от флопса на десятки тысяч, ну и квадракоптер да, прикольная штука.</p>

<p>Собственный результат.
От участия ничего не ожидали, установка была одна — зарелизиться к утру и её мы выполнили, и чего-то никто кроме нас на утро не задеплоил проект на домене и открыл исходники. Поделили пятое место с командой the-province.ru и сошлись во мнении что "это норм", да и проектом четвертого места вовсе не впечатлились.</p>

<p>Другие записи в этом бложике по <a href="http:/http://naydenov.tk/categories/geekfest/">#geekfest</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Тебе не стоит изучать руби]]></title>
    <link href="http://a-naydenov.github.com/ruby-sucks/"/>
    <updated>2012-11-14T20:53:00+09:00</updated>
    <id>http://a-naydenov.github.com/ruby-sucks</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://www.ruby-lang.org/images/logo.gif">
Опять стартап-школа и снова меня заворачивает в технопарк.<br/>
Да и как вообще можно было не повременить с программой на вечер, если тема доклада была в стиле Джоэла Спольски: «Sinatra — когда нет ничего лишнего» <a href="http://batsuev.com/2012/sinatra/index.html">(презентация)</a>. Тема не вписывалась в формат аудитории, что выступавший и почувствовал. Для себя я так и не ответил на свой вопрос, зачем собравшимся советовать Синатру и о нём слушать?</p>

<p>После, спросив у некоторых “будете знакомиться с синатрой?” было видно, что никто так и не понял зачем им это. Хотя знакомиться с гитом и руби, искать аналитику, новости сказали будут.</p>

<p>Так что, я пожалуй напишу почему не стоит тратить время на знакомство с руби и что ваша позиция должна быть короткой: руби отцой.</p>

<h2>Документация</h2>

<p>Первое и главное на чём спотыкаешься. Официальная документация по рельсам это поиск гугла. Гугл конечно крутой источник, но всё же не сравним к примеру с <a href="http://php.net/">php.net</a> или <a href="http://perldoc.perl.org/">perldoc.perl.org</a> ( по сравнивению с  <a href="http://www.ruby-doc.org/">ruby-doc.org</a> <a href="http://apidock.com/">apicodk.com</a> <a href="https://github.com/ruby/ruby/tree/trunk/doc">github.com/ruby</a> <a href="http://guides.rubyonrails.org/">guides.rubyonrails.org</a> <a href="http://api.rubyonrails.org/">api.rubyonrails.org</a>). Нет такого ресурса по рельсам (руби), где было бы подробное и внятное описание языка, функций, методов, библиотек, модулей, с ссылками на сопутствующую инфу и примеры с обсуждением сообщества. Не получиться просто открыть и начать последовательно постигать (исходники не открыты), выполнять тутотариалы и испытывать то самое наслаждение от пользования этим инструментом. Придётся исследовать и вникать в то, япошка когда-то элегантно аккумулировал.
В руби на здравом смысле не прокатишься, хоть он и хорошо читаемый. Ведь он нефига не интуитивно-понятный, хоть вещи типа
<a href="http://stdlib-doc.rubyforge.org/rdoc/index.html">stdlib</a> не сравнимы с тем как это в php.
Кто-нибудь конечно возразит, что есть подкасты и блоги, но это не сравнимо с офф. документацией и вообще в руби такая версионность, что пара мажорных релизов и всё устарело. Это возражение так же ошибочно как и то, что фреймворку не нужна документация.</p>

<h2>Порог вхождения</h2>

<p>Не верь презентациям которые гласят что это очень легко. Когда они транслируют свои массонские скринкасты, где за несколько часов собирают блог (попробуйте это! потом развернуть без знания nginx/ phusion passenger).  По ним тебе будет легко собрать из гемов 80% функционала и интегрировать его. В случаи php хватила бы наверно пары плагинов. А для питона это был бы стандартный функционал.    <br/>
Притянутый пруф:
<a href="https://github.com/heroku/python-django-sample/blob/master/requirements.txt">python-django-sample/requirements.txt</a> и
<a href="https://github.com/bryanesmith/ruby-on-rails-tutorial-sample-app/blob/master/Gemfile">ruby-on-rails-tutorial-sample-app/Gemfile</a></p>

<p>Да в рельсах многое автоматизированное и если сделать то выйдет быстро. Но это отнюдь не значит, что это легко понять. Необходимо знать основные паттерны на хорошем уровне, что лично для меня попаболь. К тому же, MVC, ActiveRecord, etc. в руби отличны от классического. <br/>
И то перечисление языков на которых писал докладчик, Александр Бацуев, я возьму как пруф, к доводу что среди рубистов очень много опытных разработчиков пришедших из других языков. Выбравших лисп-подобный синтаксис и быструю разработку прототипа и  вывод в туманный продакшн. Такие разработчики укладываются в догму Голодного, что человек который выучил один язык программирования, за три недели выучит другой язык.  <br/>
Я не считаю, этот синтез лиспа, смаллталка и перла подходящим в качестве первого языка. Во всяком случаи его собрат питон точно лучше, пусть будет по причине жёсткой стандартизованности и наличия литературы на русском.   <br/>
Я бы даже не рекомендовал какой-либо фреймворк, даже твиттер бутстрап. Безусловно использование синатры облегчит в разы разработку, но ¾ присутствующих это первый курс и они не знакомы с абстракциями... Для новичка фреймворк это не тупиковая ветвь, это шлакбаум т.к. он не будет понимать почему это работает так, а в руби это может работать по всякому (только вариантов задания переменной четыре способа). Не буду ещё раз упоминать про, <a href="http://www.udemy.com/blog/wp-content/uploads/2012/01/PROGRAMMING-LANGUAGE-3.png">‘а вот в другие’</a>.</p>

<h2>Сообщество</h2>

<p>Вокруг этого интерпретируемого языка сложилось уникальное сообщество элитарных эгоистов. Разработчиков которые почти при любом сравнении действительно могут говорить: “в руби это появилось много лет назад”.  У хипстоты своя атмосфера и они не хотят притока php-быдлокодеров, может поэтому и нет доков.</p>

<p>Они слишком ленивы и влюбленны в свой нанотопор. Не задумываются о маштабируемости, даже в архитектуре языка нет прагматизма. В очередной раз переписать API это ж круто, документацию та всё равно не надо будет писать заново, т.к. её и не было. Если даже многие нововведения ломают старый код и приводят к неправильному поведению.</p>

<h2>Косяки</h2>

<p>Если вы сделаете по скринкастам прототип проекта и решите идти дальше, то станет вопрос производительности. Тут придётся делать выбор: уходить от мегауниверсальных и тормозных гемов, писав заточенные под свои потребности гемы самому, либо путь твиттера. Наращивать серверную базу до тех пора это не поможет и не упереться в финансовый потолок. И потом пытаться сойти с рельсов, переписав на более производительной библиотеке другого языка.</p>

<p>Руби хоть и язык универсальный, но сегодня область его оправданности и практического применения аналогична области PHP т.к. по mri,rubinius,maglev,jruby, rubymotion ещё нельзя ничего сказать.
Он как php, только сахара больше. Я не нашёл доказательств обратного.
Из значимого ПО только <a href="http://ru.wikipedia.org/wiki/Puppet">puppet</a> ещё жив. Chef, Vagrant, Metasploit доказывают мою точку зрения.</p>

<p>Одна из концепции руби это свобода разработчика, создатель рельсов (считает)[https://vimeo.com/17420638],  что это неправильно когда язык ограничивает разработчика, не позволяя ему использовать лучшие решения. Утверждает, что отсутствие в руби жёсткой структуры и правил это очень удобно, для опытных программистов. Но это узкая тропинка и плохие привычки для новичков.</p>

<p><a href="http://rails.vsevteme.ru/2009/02/28/samorazvitie/4-metaprogramming-patterns-19-kyu-spasenie-utopayuschih-delo-ruk-samih-utopayuschih">Обезьяно-латание</a> делается в руби так легко и непринуждённо, что <a href="http://devblog.avdi.org/2008/02/23/why-monkeypatching-is-destroying-ruby/">это явление разрушает руби</a>
Это ещё более худшая особенность руби по сравнению с реализацией ActiveRecord, RSpec прошу заметить.</p>

<p><blockquote><p>Метапрограммирование предлагает свой путь, удобный для написания и невероятно трудный для поддержки</p></blockquote></p>

<p>Уникальное метапрограмирование, мульти-парадигмы, динамичность дают вам редкую возможность гибко извернуться и выстрелить себе в ногу. Хоть неклассический ООП во многом безусловно полезен, как то  <a href="http://habrahabr.ru/post/123551/">Scaffolding</a> и “встроенные” юнит-тесты.</p>

<p>Но очень многого в руби недостаёт: всё ещё нет нормальной IDE, а те что есть написаны не на руби, а на java кстати.Очень серьезные траблы с отладкой которые многих отпугивают от руби.Поддержка интернационализации хилая. Нет байт-код кэшеров, невозможность компиляции-оптимизации, неуправляемое выделение памяти, … не заперечисляешься.</p>

<h2>Будущее</h2>

<p>Рельсы являются прекрасным примером того как красиво упаковать то, что было открыто в области разработки программного обеспечения на протяжении последних пяти лет и получить то, что позволяет получать удовольствие от программирования.   <br/>
just fo fun направленность как и быстрое становление сказалось на архитектуре. Когда у языка с новой версии нет обратной совместимости, API претерпевает кучу изменений это неприятно.     <br/>
Послушав интервью с Матцом, кажеться, что у него до сих не выработались цели, у него даже сейчас, когда его проект получил кучу последователей, нет чёткой картины будущего. (Обойдёмся без мема с Торвальдсом.)</p>

<p>Уникальность Ruby в том что это язык который стал популярен благодаря фреймворку Rails, что уже не обычно. Вы ошибаетесь если считаете, что с Джангой похожая история. Если бы 37signals не сделали и так активно не пиарили rails, то на ruby так бы и писали 2,5 азиата.
По сути, весь язык на рынке представлен одним фреймворком. А всё, что сейчас для него создаётся, почти всё это, обвязки вокруг рельсов. Если вы хотите написать веб-приложение на Ruby, то другие фреймворки хоть и пиляться, но если что-то не пишете что-то маленькое, то выбора у вас и нет.
Rails это как JUnit в java в своё время -- тоже мешает развитию других решений.
То количество вакансий что есть мизерное и это одни рельсы.</p>

<p>Дальнейшеее развитие очень туманно, да и  отсутствует поддержка со стороны enterprise-сектора и интернет-провайдеров.</p>

<p><blockquote><p>Rails won’t become mainstream</p><footer><strong>Cedrik</strong> <cite><a href='http://beust.com/weblog/2006/04/06/why-ruby-on-rails-wont-become-mainstream/'>Why Ruby on Rails Won't Become Mainstream</a></cite></footer></blockquote></p>

<p>P.S и да, это рубиный бложек с синатрой в сердце.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Цифровая дистрибуция]]></title>
    <link href="http://a-naydenov.github.com/digital-distribution/"/>
    <updated>2012-11-07T21:25:00+09:00</updated>
    <id>http://a-naydenov.github.com/digital-distribution</id>
    <content type="html"><![CDATA[<p>На втором этапе стартап-школы, буду рубить фишку и смотреть вдаль цифровой дистрибуции контента.</p>

<p>Цифровые дистрибьюторы это, такие сервисы с большой базой лицензионного контента, доступного пользователю удобным ему способом. Олицетворением цифровой дистрибуции сегодня, является <em>Стим, аппстор, амазон и этконтент</em>.</p>

<p>Этот прогрессивный метод доставки отличается от уже устоявшихся в обществе и привносит ряд новшеств. Так про унификацию рынка, прозрачную модель с тремя звеньями с удобством для потребителя, единым порядком на рынке, гарантиями для правообладателя и прочими ништяками нам и так ясно, Хотелось бы обратить внимание на что-нибудь другое.</p>

<!-- more -->


<p>Начнем с книгоиздания. Ежегодно станок выдает более ста тысяч книг, на рынке находится несколько миллионов наименований книг. Хоть каким-то спросом пользуется менее десяти тысяч названий, и даже федеральные торговые сети предлагают покупателям не более ста тысяч названий.</p>

<p><em>Amazon</em> - ещё более маштабная витрина, и так книги, которые иначе не имели бы ни одного шанса попасться на глаза покупателю, могут быть найдены и куплены. Сеть помогает читателю, упрощая распространение информации о книгах и позволяет услышав о книге, тут же ее купить. Но даже в этом случае лишь немногие книги живут дольше года или двух, после выхода из печати. Множество книг просто находятся в забвении от читателя, он не сможет их найти в этой огромной библиотеке.  Из достойных работ немногие получают большие рекламные бюджеты. Такая система имеет сильный крен в пользу «имущих» против «неимущих».</p>

<p>Получается, что автору контента стоит бояться не пиратсва, а безызвестность.  Многие авторы после возврата прав на своё произведение от издателя размещают его в открытом доступе, в надежде так найти своего читателя.</p>

<p>Пиратство не такое злое явление. Для неизвестного автора удача стать жертвой пиратов. Снятие преград для распространения и обеспечение постоянного доступа потребителей ко всему содержимому каталогов, а не только к наиболее популярным произведениям, было бы благом для автора и утонченного читателя.</p>

<p>Пиратство как массовое явление будет существовать до тех пор, пока пользователю так будет удобней. Самый простой способ добиться того, чтобы потребители перестали обмениваться незаконными копиями музыкальных произведений и фильмами, - дать им разумную альтернативу по справедливой цене.
Для вас на самом деле важна радость от обладания вещью имеющей для вас ценность, иначе почему вы покупаете книгу, вместо того чтобы взять её в библиотеке. Либо покупаете DVD, а не берете на прокат, смотрите онлайн.</p>

<p>Конечно я не считаю пиратство черной язвой общества, ущерб пиратства вообще переоценен. Тот факт, что <em>виндоувс</em> больше десятилетия доступно на варез-сайтах, не мешает <em>Мелкософту</em> быть крупнейшей компанией. А Оценки «упущенных» доходов кажутся дикостью, если бы не незаконная копия, то продукт был бы якобы куплен. Но покупки вследствие популярности, которую получил продукт благодаря нелицензионным копиям вообще не учитываются.
И абсолютно не факт, что если бы продукт не был бы в бесплатном доступе, его бы непременно приобрели за плату.</p>

<p>Доступность и удобство определяют выбор пользователя. Поэтому дистрибьюторы должны разобраться с методами сбыта. Так сейчас прекрасно видно, что электронные СМИ заменяют печатные издания, но являются нерентабельными, так как не ясно, как же их продавать. Существует несколько методов и мы их знаем, среди них нет абсолютно лучшего, Дела можно вести по разному. Наиболее привлекательным мне кажется метод подписки, который сейчас переживает подъём и уже хорошо известен по опыту кабельного телевидения, из которого известно, что пользователь предпочитает подписку плате за однократный просмотр.  Предпочитает комплексную подписку на пакет каналов. Ему нужен сервис. И кстати, сейчас так и  продаётся доступ в сеть между прочим. Этот метод доказал своё преимущество перед рекламодательной моделью. Устраивая обе стороны, ведь дистрибьютор имеет постоянный прогнозируемый доход, а у потребителя нет ограничений и неудобств. И опять же, дистрибьюторы конкурирует в первую очередь сервисом, а не эксклюзивностью  контента.</p>

<p>Что касается эксклюзивности и удобства, то сейчас это представляется в виде платформ компаний, таких закрытых ‘вещей в себе’. Насколько это изменит рынок дистрибуции в перспективе не ясно.
Но с точки зрения пользовательского экспириентса, сторы это хороший вариант. Весь контент получаем из единой точки, нет вирусов, есть цензура, отзывы почитать можно. Бюрократизм, закрытость, искусственные ограничения  не представляются уж такими отрицательными факторами. Место в топе определяют пользователи. Искусственные ограничения (api платформы) – средства конкурентной борьбы за внимание разработчиков опять.</p>

<p>Такие агрегаторы на сегоднящний момент являются самой выгодной моделью доставки контента. Это же относиться и для цифровых изданий, издание  PDF версии, создание приложение, оптимизация сайта под разные устройства уступают по уровню монетизации, распространению через агрегаторы. Такие как <em>Digital Publishing</em> к примеру.</p>

<p>Цифровая революция заставляет мировую индустрию контента трансформироваться естественным образом. Некоторым отраслям это даётся легко – кинематографу Для других путь более тернист.</p>

<p>Главное что привнесли цифровые технологии в индустрию, это снижения транзакционных издержек и расходов на сбыт.</p>

<p>Создание стартапов по монетизации контента, является одним из самых выигрышных направлений сегодня. Но их уровень прибыли находиться на очень низком уровне. Нужно понимать что создавая контент-сервис вам нужны владельцы контента, а для этого вам придёться пойти и заполучить их до того, как вы получите продажи, а это не осуществимо без больших гарантийных средств за спиной.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Мобильные устройства в будущем]]></title>
    <link href="http://a-naydenov.github.com/mobile-devices-in-the-future/"/>
    <updated>2012-10-23T19:43:00+09:00</updated>
    <id>http://a-naydenov.github.com/mobile-devices-in-the-future</id>
    <content type="html"><![CDATA[<p>Пост написан в рамках участия в проекте Стартап-школа.</p>

<p>Представляя будущую индустрию мобильных технологий, ограничусь отрезком времени в пять лет.</p>

<p>Этот тот срок, когда уже окончательно сформируется рынок мобильных ОС, такой, какой сформировался с ПК в 90-х. Когда остались Виндоувс, Линукс и МакОС, а все остальные остались на задворках. Подобный исторический момент происходит и сейчас, на рынке формируется пул игороков которые будут вести индустрию.</p>

<!-- more -->


<p>Так через пять лет, вместо Линукс будет его мобильный клон андроид, с миноритарной долей на рынке (40-50%), АйОс займёт порядка третьей части пользовательской аудитории, Блэкберри ~15% (он уже не вернёт былой славы и величия, плак-плак)  и Виндовс фон с тем, что остаётся. В моём прогнозе нет места другим участникам, конечно, сейчас рынок динамичней чем в 90-х и различные Фаерфокс ОС будут так же существовать, но им не заполучить внимание массового пользователя. Вообще Фаерфокс ОС интересна только своей ‘форкнутостью’.</p>

<p>Если с операционными системами всё понятно, то касаетельно того, каким будет ценовой сегмент, представляется ещё более интересным.</p>

<p>В ноябре появляться планшеты на базе x86-архитектурного процессора Intel и ОС Windows 8 RT. Потребителю представят компактное устройство со всеми возможностями стационарного компьютера. Надо ли пояснять, что планшеты на базе Android (на arm-процессорах) перейдут в сегмент бюджетных устройств, в большинстве своём (Amazon Kindle Fire сделал пакость, ага). Так же, появление семидюймового айпад мини, стоимость которого конкурентна с Surface, сильно меняет стоимость устройств представляющих класс устройств планшетный ПК и окончательно сдвигает кластер электронных читалок.</p>

<p>До сих пор планшет рассматривался мной как в большей степени игровое, нет,
<img class="left" src="http://dl.dropbox.com/u/89057283/post/still_handy.jpg">
развлекательное устройство. То уже совсем скоро придется пересмотреть свои взгляды.</p>

<p>Возможности планшета не только удовлетворяют потребности большинства людей в использовании персональных компьютеров на 80%, но с появлением office 365 и <a href="http://goo.gl/8Z2V5">http://goo.gl/8Z2V5</a> годны для работы на даче.
Планшеты стремительно оккупируют внутренние карманы пиджака.
Тяжёлые нетбуки отдают свою роль планшетам. Продажи планшетов стремительно повышаются, а стационарных компьютеров и ноутбуков – нет.</p>

<p>Мобильные устройства на порядок практичней ПК, обычному пользователю больше не нужен полноформатный ПК. Функции персонального компьютера сводятся к выводу и отображению информации (chrome OS), а так же к передаче и приему данных из дата-центров (ой, т.е. из облака). Отныне данные пользователя не привязаны у устройству, о хранении информации не приходиться задумываться, документы можно открыть на любом компьютере, планшете, смартфоне. При этом не нужно переживать, что компьютер сломается или не увидит флешку. Нет привязки к устройству и его потеря не приведёт к потери данных.
Облачность подразумевает мобильность, и наоборот.</p>

<p>Утолщение каналов и уменьшение стоимости переданного байта способствует популяризации карманных устройств. Операторы заинтересованы в мобильных девайсах и внедрении 4ДЖИ. Мобильный трафик растёт и будет расти, он обгонит по доли трафик со стационарных точек. А с ростом мобильной связи будут внедряться облачные технологии.
Другой вопрос, когда фейсбук научиться продавать мобильную рекламу, но это несомненно произойдёт, ведь уже сейчас, число кликов по рекламе у мобильного потребителя выше, чем у потребителя сидящего за полноформатным компьютером.
Через тройку лет, монетизация мобильного интернета достигнет уровня сопоставимого с персональными компьютерами</p>

<p>Полноформатный компьютер всё же не исчезнет как класс. Он эволюционирует. Так все потуги интела не просрать рынок не бесполезны.Просто всё движется к миниатюризации.</p>

<p>Будущее за гибридными устройствами. Смартфон+ноутбук, планшет+раб. станция,  смартфон+часы, неттоп+тв-тюнер Для потребителя привлекательно имеет два в одном за те же деньги.</p>

<p><img class="right" src="http://dl.dropbox.com/u/89057283/post/nokia_e10.jpg" title="Nokia E10 Concept" >
Устройства будут технически эволюционировать <a href="http://youtu.be/IX-gTobCJHs">(видео концепта)</a>. Так гибкий и гнутый дисплей с колоссальным графическим разрешением, будет собирать солнечную энергию, для собственного функционирования. Устройства будут оснащены топливными батареями. Будут включать молекулярные технологии для биологических анализов и выступать как диагностические центры человеческого организма и окружающей среды. Устройство будет идентифицировать хозяина и быть как никогда ранее персонализированным. Распознавание владельца, его жестов, голоса, эмоции.
Внедрение пико-проекторов даст возможность наслаждаться объёмными изображениями без использования дополнительной оптики, дисплей и клавиатура будут на отображаться на поверхность/пространство.</p>

<p>Техническое изменение возможностей устройств как и мобильной связи, само самой благоприятно скажется  на развитии программного обеспечения. Разработчики начнут выпускать приложения и для телевизоров, игровых консолей, автомобилей складных экранов, google glass. Приложение не будут платформа-зависимыми. нативные мобильные приложения на платформах вроде iOS и Android — это промежуточный шаг на пути к полностью мобильной сети. Приложение будущего — это веб-приложения.</p>
]]></content>
  </entry>
  
</feed>
